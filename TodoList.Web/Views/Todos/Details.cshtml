@model TodoList.Core.Models.TodoItem
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Details";
}

<div>
    <h4>Todo</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd>
            <markdown markdown="Content"></markdown>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Done)
        </dt>
        <dd>
            @(Model.Done ? Localizer["Yes"] : Localizer["No"])
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Added)
        </dt>
        <dd>
            <span data-value="@Model.Added" class="timeStampValue">
                @Model.Added
            </span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.DueTo)
        </dt>
        <dd>
            <span data-value="@Model.DueTo" class="timeStampValue">
                @Model.DueTo
            </span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Tags)
        </dt>
        <dd>
            @if (Model.Tags != null)
            {
                @foreach (var tag in Model.Tags)
                {
                    <a asp-action="Index" asp-route-tag="@tag" class="badge badge-light">@tag</a>
                }
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.File)
        </dt>
        <dd>
            @ViewData["FileName"]
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">@Localizer["Edit"]</a> |
    <a asp-action="Index">@Localizer["Back to List"]</a>
</div>
